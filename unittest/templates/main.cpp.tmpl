#include <vector>
#include <memory>
#include <iostream>
#include <algorithm>
#include <string>
#include "base.hpp"
#include "modular.hpp"

const std::vector<std::string> modules =
{
	% for module in modules:
	"${module}",
	% endfor
};

int main()
{
	std::vector<std::unique_ptr<base>> extensions;
	extensions.reserve(modules.size());

	std::for_each(modules.begin(), modules.end(), [&extensions](const std::string& module_path){
		extensions.push_back(modular::create<base>(module_path));
	});

	std::for_each(extensions.begin(), extensions.end(), [](const std::unique_ptr<base>& ext){
		ext->test();
	});

	return 0;
}
